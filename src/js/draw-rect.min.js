/** painter v0.1.1 */ (function($){var Painter=(function(){if(_.isObject(window.Painter)){return window.Painter}else{window.Painter={};return window.Painter}})();function Rect(ele){var that=this;this.ele=ele;this.$ele=$(ele);this.offsetX=0;this.offsetY=0;this.width=0;this.height=0;this.borderWidth=1;this._onPgMouseMoveCallbacks={};this._onPgMouseUpCallbacks={};this.init=function(){that.dragable()};this.playgroundMouseMove=function(event){that._sendEvent(event,that._onPgMouseMoveCallbacks)};this.onPgMouseMove=function(name,func){that._onPgMouseMoveCallbacks[name]=func};this.playgroundMouseUp=function(event){that._sendEvent(event,that._onPgMouseUpCallbacks)};this.onPgMouseUp=function(name,func){that._onPgMouseUpCallbacks[name]=func};this.onDrag=function(func){that._onDragCallbakc=func};this.dragable=function(){var startOffset=null;var startX=null;var startY=null;var dragging=false;that.$ele.bind("mousedown.drag",function(event){startOffset={x:that.offsetX,y:that.offsetY};startX=event.pageX;startY=event.pageY;dragging=true;event.preventDefault()});that.onPgMouseMove("drag",function(event){if(dragging){var deltaX=event.pageX-startX;var deltaY=event.pageY-startY;that.setX(startOffset.x+deltaX);that.setY(startOffset.y+deltaY);Painter._callWhenFunction(that._onDragCallbakc,event)}});that.onPgMouseUp("drag",function(event){if(dragging){dragging=false;startOffset=null;startX=null;startY=null}});that.$ele.css("cursor","move")};this.undrag=function(){that.$ele.unbind("mousedown.drag");delete that._onPgMouseMoveCallbacks.drag;delete that._onPgMouseUpCallbacks.drag;that.$ele.css("cursor","default");return that};this.onResize=function(func){that._onResizeCallback=func};this.resizable=function(){var $mover=that.$ele.append('<i class="mover"></i>').find("i");var moving=false;var startBox=null;var topLeftPoint=null;var bottomRightPoint=null;var startOffset=null;var endOffset=null;$mover.mousedown(function(event){moving=true;startBox=that.box();topLeftPoint={x:startBox.x,y:startBox.y};bottomRightPoint={x:startBox.x+startBox.width,y:startBox.y+startBox.height};startOffset={x:event.pageX,y:event.pageY}});that.onPgMouseMove("resize",function(event){if(moving){endOffset={x:event.pageX,y:event.pageY};var deltaX=endOffset.x-startOffset.x;var deltaY=endOffset.y-startOffset.y;var newEndPointX=bottomRightPoint.x+deltaX;var newEndPointY=bottomRightPoint.y+deltaY;var newX=Math.min(topLeftPoint.x,newEndPointX);var newY=Math.min(topLeftPoint.y,newEndPointY);that.setOffset(newX,newY);that.setWidth(Math.abs(topLeftPoint.x-newEndPointX));that.setHeight(Math.abs(topLeftPoint.y-newEndPointY));$mover.removeClass("mover-nw mover-ne mover-sw mover-sw");var direction=0;if(newY<topLeftPoint.y){direction=direction+0}else{direction=direction+2}if(newX<topLeftPoint.x){direction=direction+0}else{direction=direction+1}switch(direction){case 0:$mover.addClass("mover-nw");break;case 1:$mover.addClass("mover-ne");break;case 2:$mover.addClass("mover-sw");break;case 3:$mover.addClass("mover-se");break}Painter._callWhenFunction(that._onResizeCallback,event)}});that.onPgMouseUp("resize",function(event){if(moving){moving=false;$mover.removeClass("mover-nw mover-ne mover-sw mover-sw")}});return that};this.unresize=function(){that.$ele.find("i").remove();delete that._onPgMouseMoveCallbacks.resize;delete that._onPgMouseUpCallbacks.resize};this.remove=function(){Painter._callWhenFunction(that._onRemoveCallback,that);that.$ele.remove()};this.onRemove=function(func){that._onRemoveCallback=func};this.box=function(){return{x:that.offsetX,y:that.offsetY,width:that.width,height:that.height}};this.setX=function(x){that.offsetX=x;that.$ele.css("left",x-that.borderWidth);return that};this.setY=function(y){that.offsetY=y;that.$ele.css("top",y-that.borderWidth);return that};this.setOffset=function(x,y){that.setX(x);that.setY(y);return that};this.setWidth=function(width){that.width=width;that.$ele.width(width);return that};this.setHeight=function(height){that.height=height;that.$ele.height(height);return that};this.setDimension=function(width,height){that.setWidth(width);that.setHeight(height);return that};this.setColor=function(color){that.$ele.css("background-color",color);return that};this.setBorderColor=function(color){that.$ele.css("border-color",color);return that};this.setBorderWidth=function(borderWidth){that.borderWidth=borderWidth;that.$ele.css("border-width",borderWidth);that._updateOffset();return that};this._updateOffset=function(){that.setOffset(that.offsetX,that.offsetY)};this._sendEvent=function(event,callbacks){_.each(callbacks,function(callback){Painter._callWhenFunction(callback,event)})}}Rect.build=function(playground){var $rectEle=$('<div class="rect"></div>').appendTo($(playground));var rect=new Rect($rectEle[0]);rect.init();return rect};function Playground(ele,options){var that=this;this.ele=ele;this.$ele=$(ele);this.$ele.addClass("playground");this.rects=[];(function(){that.onPaintRectStart=null;if(_.has(options,"rectStart")){that.onPaintRectStart=options.rectStart}that.onPaintRectDoing=null;if(_.has(options,"rectDrawing")){that.onPaintRectDoing=options.rectDrawing}that.onPaintRectComplete=null;if(_.has(options,"rectComplete")){that.onPaintRectComplete=options.rectComplete}that.$ele.bind("mousemove.onPgMouseMove",function(event){_.each(that.rects,function(rect){rect.playgroundMouseMove(event)})});that.$ele.bind("mouseup.onPgMouseUp",function(event){_.each(that.rects,function(rect){rect.playgroundMouseUp(event)})})})();this.paintRect=function(x,y,width,height){var rect=Rect.build(that.ele);that.rects.push(rect);rect.onRemove(function(removingRect){var index=_.indexOf(that.rects,removingRect);that.rects.splice(index,1)});rect.setOffset(x,y);rect.setDimension(width,height);return rect};this.drawable=function(){var $ele=that.$ele;var newRect=null;var startOffset=null;var endOffset=null;var drawing=false;$ele.bind("mousedown.draw",function(event){if(that.isEventFromRect(event)){return}if(that.isEventFromMover(event)){return}startOffset=Painter.positionRelativeTo(event.pageX,event.pageY,$ele[0]);newRect=that.paintRect(startOffset.x,startOffset.y,0,0);drawing=true;Painter._callWhenFunction(that.onPaintRectStart,newRect)});$ele.bind("mousemove.draw",function(event){if(drawing){endOffset=Painter.positionRelativeTo(event.pageX,event.pageY,$ele[0]);newRect.setX(Math.min(startOffset.x,endOffset.x));newRect.setY(Math.min(startOffset.y,endOffset.y));newRect.setWidth(Math.abs(endOffset.x-startOffset.x));newRect.setHeight(Math.abs(endOffset.y-startOffset.y));Painter._callWhenFunction(that.onPaintRectDoing,newRect)}});$ele.bind("mouseup.draw",function(){if(drawing){drawing=false;Painter._callWhenFunction(that.onPaintRectComplete,newRect);startOffset=null;endOffset=null;newRect=null}})};this.undrawable=function(){that.$ele.unbind(".draw")};this.isEventFromRect=function(event){return $(event.target).hasClass("rect")};this.isEventFromMover=function(event){return $(event.target).hasClass("mover")};(function(){that.drawable()})()}Painter.playground=function(options){var $ele=null;if(_.has(options,"ele")){$ele=$(options.ele)}else{if(_.has(options,"id")){$ele=$(options.id)}}return new Playground($ele[0],options)};Painter.positionRelativeTo=function(pageX,pageY,element){var offset=$(element).offset();return{x:pageX-offset.left,y:pageY-offset.top}};Painter._callWhenFunction=function(func,args){if(_.isFunction(func)){func(args)}}})(jQuery);
